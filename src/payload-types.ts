/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    pages: Page;
    faqentries: Faqentry;
    partners: Partner;
    testimonials: Testimonial;
    websites: Website;
    locales: Locale;
    menus: Menu;
    surveys: Survey1;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    faqentries: FaqentriesSelect<false> | FaqentriesSelect<true>;
    partners: PartnersSelect<false> | PartnersSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    websites: WebsitesSelect<false> | WebsitesSelect<true>;
    locales: LocalesSelect<false> | LocalesSelect<true>;
    menus: MenusSelect<false> | MenusSelect<true>;
    surveys: SurveysSelect<false> | SurveysSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  path: string;
  slug: string;
  website: number | Website;
  locale: number | Locale;
  title: string;
  sections?:
    | (Header | Hero | Content | Collection | Longread | Medias | FAQ | Partners | Testimonials | Survey | Forms)[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    metatags?:
      | {
          metatags: {
            name: string;
            value: string;
          };
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "websites".
 */
export interface Website {
  id: number;
  name: string;
  url: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locales".
 */
export interface Locale {
  id: number;
  locale: string;
  name: string;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header".
 */
export interface Header {
  title?: string | null;
  subtitle?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'header';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero".
 */
export interface Hero {
  title: string;
  subtitle?: string | null;
  image?: (number | null) | Media;
  imagePlacement: 'left' | 'right' | 'top' | 'bottom' | 'behind';
  CTA?: boolean | null;
  cta?: {
    title: string;
    icon?: 'default' | null;
    color: 'default' | 'primary' | 'secondary' | 'accent' | 'success' | 'error' | 'warning' | 'info' | 'neutral';
    variant: 'solid' | 'outline' | 'tint' | 'ghost';
    type?: ('page' | 'url' | 'url_top') | null;
    page?: (number | null) | Page;
    url?: string | null;
  };
  options?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Content".
 */
export interface Content {
  title?: string | null;
  subtitle?: string | null;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image?: (number | null) | Media;
  imagePlacement: 'left' | 'right' | 'top' | 'bottom' | 'behind';
  CTA?: boolean | null;
  cta?: {
    title: string;
    icon?: 'default' | null;
    color: 'default' | 'primary' | 'secondary' | 'accent' | 'success' | 'error' | 'warning' | 'info' | 'neutral';
    variant: 'solid' | 'outline' | 'tint' | 'ghost';
    type?: ('page' | 'url' | 'url_top') | null;
    page?: (number | null) | Page;
    url?: string | null;
  };
  options?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Collection".
 */
export interface Collection {
  kind: 'cards' | 'tabs' | 'grid' | 'flex' | 'list' | 'progress' | 'instructions';
  items: {
    brick?: {
      headline?: string | null;
      title?: string | null;
      subtitle?: string | null;
      icon?: 'default' | null;
      image?: (number | null) | Media;
      type?: ('page' | 'url' | 'url_top') | null;
      page?: (number | null) | Page;
      url?: string | null;
    };
    id?: string | null;
  }[];
  options?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'collection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Longread".
 */
export interface Longread {
  items: {
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    id?: string | null;
  }[];
  options?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'longread';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Medias".
 */
export interface Medias {
  layout: 'column-1' | 'column-2' | 'flex' | 'zigzag' | 'slideshow';
  items: {
    media_item?: {
      type?: ('photo' | 'video' | 'youtube' | 'vimeo') | null;
      title?: string | null;
      youtube_id?: string | null;
      vimeo_id?: string | null;
      image?: (number | null) | Media;
      video?: (number | null) | Media;
    };
    id?: string | null;
  }[];
  options?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'medias';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ".
 */
export interface FAQ {
  items: (number | Faqentry)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqentries".
 */
export interface Faqentry {
  id: number;
  title: string;
  text: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Partners".
 */
export interface Partners {
  items: (number | Partner)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'partners';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "partners".
 */
export interface Partner {
  id: number;
  name: string;
  image: number | Media;
  description?: string | null;
  url?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonials".
 */
export interface Testimonials {
  items: (number | Testimonial)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  name: string;
  company?: string | null;
  position?: string | null;
  image: number | Media;
  description: string;
  url?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Survey".
 */
export interface Survey {
  survey: number | Survey1;
  id?: string | null;
  blockName?: string | null;
  blockType: 'survey';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "surveys".
 */
export interface Survey1 {
  id: number;
  website: number | Website;
  name: string;
  locale: number | Locale;
  pages: {
    survey_page: {
      title?: string | null;
      subtitle?: string | null;
      image?: (number | null) | Media;
      questions?:
        | (
            | {
                title: string;
                description?: string | null;
                name: string;
                layout?: ('100' | '75' | '50' | '33' | '25') | null;
                required?: boolean | null;
                type: 'text' | 'textarea';
                minLength?: number | null;
                maxLength?: number | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'TextQuestion';
              }
            | {
                title: string;
                description?: string | null;
                name: string;
                layout?: ('100' | '75' | '50' | '33' | '25') | null;
                required?: boolean | null;
                type: 'integer' | 'double' | 'slider' | 'range';
                decimals?: number | null;
                min?: number | null;
                defaultValue?: number | null;
                defaultMin?: number | null;
                defaultMax?: number | null;
                max?: number | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'NumberQuestion';
              }
            | {
                title: string;
                description?: string | null;
                name: string;
                layout?: ('100' | '75' | '50' | '33' | '25') | null;
                required?: boolean | null;
                type: 'date' | 'daterange';
                minDate?: string | null;
                defaultDate?: ('today' | 'current_month' | 'month_to_date' | 'current_year' | 'year_to_date') | null;
                maxDate?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'DateQuestion';
              }
            | {
                title: string;
                description?: string | null;
                name: string;
                layout?: ('100' | '75' | '50' | '33' | '25') | null;
                required?: boolean | null;
                type: 'radio' | 'select' | 'checkgroup' | 'togglegroup';
                options: {
                  title: string;
                  value: string;
                  id?: string | null;
                }[];
                id?: string | null;
                blockName?: string | null;
                blockType: 'ChoiceQuestion';
              }
            | {
                title: string;
                description?: string | null;
                name: string;
                layout?: ('100' | '75' | '50' | '33' | '25') | null;
                required?: boolean | null;
                type: 'toggle' | 'check';
                id?: string | null;
                blockName?: string | null;
                blockType: 'CheckQuestion';
              }
            | {
                title: string;
                description?: string | null;
                name: string;
                layout?: ('100' | '75' | '50' | '33' | '25') | null;
                required?: boolean | null;
                type: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'EmailQuestion';
              }
            | {
                title: string;
                description?: string | null;
                name: string;
                layout?: ('100' | '75' | '50' | '33' | '25') | null;
                required?: boolean | null;
                type: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'PhoneQuestion';
              }
            | {
                title: string;
                subtitle?: string | null;
                type?: string | null;
                layout?: string | null;
                image?: (number | null) | Media;
                CTA?: boolean | null;
                cta?: {
                  title: string;
                  icon?: 'default' | null;
                  color:
                    | 'default'
                    | 'primary'
                    | 'secondary'
                    | 'accent'
                    | 'success'
                    | 'error'
                    | 'warning'
                    | 'info'
                    | 'neutral';
                  variant: 'solid' | 'outline' | 'tint' | 'ghost';
                  type?: ('page' | 'url' | 'url_top') | null;
                  page?: (number | null) | Page;
                  url?: string | null;
                };
                id?: string | null;
                blockName?: string | null;
                blockType: 'NoQuestion';
              }
          )[]
        | null;
      back?: boolean | null;
      progress?: boolean | null;
      action: 'none' | 'next' | 'submit';
    };
    id?: string | null;
  }[];
  animation: 'horizontal' | 'vertical' | 'none';
  progressStyle: 'line' | 'dots' | 'steps' | 'percents' | 'none';
  options?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Forms".
 */
export interface Forms {
  form: number | Form;
  id?: string | null;
  blockName?: string | null;
  blockType: 'forms';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus".
 */
export interface Menu {
  id: number;
  website: number | Website;
  name: string;
  locale: number | Locale;
  items: (
    | {
        title: string;
        icon?: 'default' | null;
        image?: (number | null) | Media;
        items: {
          menuitem: {
            title: string;
            icon?: 'default' | null;
            image?: (number | null) | Media;
            type?: ('page' | 'url' | 'url_top') | null;
            page?: (number | null) | Page;
            url?: string | null;
          };
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'menuholder';
      }
    | {
        title: string;
        icon?: 'default' | null;
        image?: (number | null) | Media;
        type?: ('page' | 'url' | 'url_top') | null;
        page?: (number | null) | Page;
        url?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'menublock';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'faqentries';
        value: number | Faqentry;
      } | null)
    | ({
        relationTo: 'partners';
        value: number | Partner;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'websites';
        value: number | Website;
      } | null)
    | ({
        relationTo: 'locales';
        value: number | Locale;
      } | null)
    | ({
        relationTo: 'menus';
        value: number | Menu;
      } | null)
    | ({
        relationTo: 'surveys';
        value: number | Survey1;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  path?: T;
  slug?: T;
  website?: T;
  locale?: T;
  title?: T;
  sections?:
    | T
    | {
        header?:
          | T
          | {
              title?: T;
              subtitle?: T;
              id?: T;
              blockName?: T;
            };
        hero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              image?: T;
              imagePlacement?: T;
              CTA?: T;
              cta?:
                | T
                | {
                    title?: T;
                    icon?: T;
                    color?: T;
                    variant?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                  };
              options?: T;
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              title?: T;
              subtitle?: T;
              text?: T;
              image?: T;
              imagePlacement?: T;
              CTA?: T;
              cta?:
                | T
                | {
                    title?: T;
                    icon?: T;
                    color?: T;
                    variant?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                  };
              options?: T;
              id?: T;
              blockName?: T;
            };
        collection?:
          | T
          | {
              kind?: T;
              items?:
                | T
                | {
                    brick?:
                      | T
                      | {
                          headline?: T;
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          image?: T;
                          type?: T;
                          page?: T;
                          url?: T;
                        };
                    id?: T;
                  };
              options?: T;
              id?: T;
              blockName?: T;
            };
        longread?:
          | T
          | {
              items?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              options?: T;
              id?: T;
              blockName?: T;
            };
        medias?:
          | T
          | {
              layout?: T;
              items?:
                | T
                | {
                    media_item?:
                      | T
                      | {
                          type?: T;
                          title?: T;
                          youtube_id?: T;
                          vimeo_id?: T;
                          image?: T;
                          video?: T;
                        };
                    id?: T;
                  };
              options?: T;
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              items?: T;
              id?: T;
              blockName?: T;
            };
        partners?:
          | T
          | {
              items?: T;
              id?: T;
              blockName?: T;
            };
        testimonials?:
          | T
          | {
              items?: T;
              id?: T;
              blockName?: T;
            };
        survey?:
          | T
          | {
              survey?: T;
              id?: T;
              blockName?: T;
            };
        forms?:
          | T
          | {
              form?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        metatags?:
          | T
          | {
              metatags?:
                | T
                | {
                    name?: T;
                    value?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqentries_select".
 */
export interface FaqentriesSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "partners_select".
 */
export interface PartnersSelect<T extends boolean = true> {
  name?: T;
  image?: T;
  description?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  company?: T;
  position?: T;
  image?: T;
  description?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "websites_select".
 */
export interface WebsitesSelect<T extends boolean = true> {
  name?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locales_select".
 */
export interface LocalesSelect<T extends boolean = true> {
  locale?: T;
  name?: T;
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus_select".
 */
export interface MenusSelect<T extends boolean = true> {
  website?: T;
  name?: T;
  locale?: T;
  items?:
    | T
    | {
        menuholder?:
          | T
          | {
              title?: T;
              icon?: T;
              image?: T;
              items?:
                | T
                | {
                    menuitem?:
                      | T
                      | {
                          title?: T;
                          icon?: T;
                          image?: T;
                          type?: T;
                          page?: T;
                          url?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        menublock?:
          | T
          | {
              title?: T;
              icon?: T;
              image?: T;
              type?: T;
              page?: T;
              url?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "surveys_select".
 */
export interface SurveysSelect<T extends boolean = true> {
  website?: T;
  name?: T;
  locale?: T;
  pages?:
    | T
    | {
        survey_page?:
          | T
          | {
              title?: T;
              subtitle?: T;
              image?: T;
              questions?:
                | T
                | {
                    TextQuestion?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          name?: T;
                          layout?: T;
                          required?: T;
                          type?: T;
                          minLength?: T;
                          maxLength?: T;
                          id?: T;
                          blockName?: T;
                        };
                    NumberQuestion?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          name?: T;
                          layout?: T;
                          required?: T;
                          type?: T;
                          decimals?: T;
                          min?: T;
                          defaultValue?: T;
                          defaultMin?: T;
                          defaultMax?: T;
                          max?: T;
                          id?: T;
                          blockName?: T;
                        };
                    DateQuestion?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          name?: T;
                          layout?: T;
                          required?: T;
                          type?: T;
                          minDate?: T;
                          defaultDate?: T;
                          maxDate?: T;
                          id?: T;
                          blockName?: T;
                        };
                    ChoiceQuestion?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          name?: T;
                          layout?: T;
                          required?: T;
                          type?: T;
                          options?:
                            | T
                            | {
                                title?: T;
                                value?: T;
                                id?: T;
                              };
                          id?: T;
                          blockName?: T;
                        };
                    CheckQuestion?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          name?: T;
                          layout?: T;
                          required?: T;
                          type?: T;
                          id?: T;
                          blockName?: T;
                        };
                    EmailQuestion?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          name?: T;
                          layout?: T;
                          required?: T;
                          type?: T;
                          id?: T;
                          blockName?: T;
                        };
                    PhoneQuestion?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          name?: T;
                          layout?: T;
                          required?: T;
                          type?: T;
                          id?: T;
                          blockName?: T;
                        };
                    NoQuestion?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          type?: T;
                          layout?: T;
                          image?: T;
                          CTA?: T;
                          cta?:
                            | T
                            | {
                                title?: T;
                                icon?: T;
                                color?: T;
                                variant?: T;
                                type?: T;
                                page?: T;
                                url?: T;
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              back?: T;
              progress?: T;
              action?: T;
            };
        id?: T;
      };
  animation?: T;
  progressStyle?: T;
  options?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}